name: Deploy to staging

concurrency:
  group: deploy-stage-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - "**" # always deploy for branches
  #   tags-ignore:
  #     - "**" # never deploy for tags

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Use npm v7
        run: npm install --global npm@7

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm install
        run: npm ci --production

      - name: Prepare the Delivery path prefix
        uses: actions/github-script@v3
        id: delivery-path-prefix
        with:
          result-encoding: string
          script: |
            // import path module
            const path = require('path');

            // get reference to this commit
            const ref = context.ref;

            // get repo that triggered this push
            const { repo } = context.repo;

            // pull branch name off the ref
            const parts = ref.split('/');
            const branch = parts[parts.length - 1];

            // build path used for this deploy
            const basePath = path.join(repo, branch);

            // return the prepared path as the output
            return basePath;

      - name: Build the project
        run: npm run build
        env:
          BAKER_PATH_PREFIX: ${{ steps.delivery-path-prefix.outputs.result }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BAKER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BAKER_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.BAKER_AWS_S3_STAGING_REGION }}

      - name: Upload the prepared files
        uses: datadesk/delivery-deploy-action@master
        with:
          bucket: ${{ secrets.BAKER_AWS_S3_STAGING_BUCKET }}
          base-path: ${{ steps.delivery-path-prefix.outputs.result }}
          dir: _dist
          should-cache: true
          use-accelerate-endpoint: false
          public: true
